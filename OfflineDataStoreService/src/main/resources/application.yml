spring:
  application:
    name: AuthenticationService
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://14.103.140.112:49152/InfiniteChat?useUnicode=true&characterEncoding=UTF-8&serverTimezone=UTC
    username: root
    password: gK3T9n%q2M@j7Z4
    hikari:
      # 设置最大连接池大小
      maximum-pool-size: 30
      # 设置最小空闲连接数
      minimum-idle: 10
      # 设置连接池初始化失败时的超时时间
      initialization-fail-timeout: 10000
      # 设置连接池的最大空闲时间
      idle-timeout: 30000
      # 设置连接池中连接的最大生命周期
      max-lifetime: 60000
      # 设置连接池的连接超时时间
      connection-timeout: 30000
      # 设置连接池的最大等待时间
      validation-timeout: 3000
      # 配置连接池验证SQL（根据数据库选择合适的SQL）
      connection-test-query: SELECT 1
      # 设置连接池的池化管理名称
      pool-name: HikariCP
  jmx:
    enabled: true
  redis:
    database: 0
    host: 14.103.140.112
    port: 59000
    password: e65K4t8w2
  cloud:
    nacos:
      discovery:
        server-addr: 14.103.140.112:18375

  kafka:
    bootstrap-servers:
      - 14.103.140.112:19092

    consumer:
      group-id: thousnads_word_message_all
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer

server:
  port: 8085

# 打印 sql
mybatis-plus:
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl

logging:
  level:
    com.lou.offlinedatastoreservice.mapper: debug # 改成你的mapper文件所在包路径

management:
  endpoints:
    web:
      exposure:
        include: health,metrics